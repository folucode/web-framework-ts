{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA,IAAA,IAAA;ACLA,ADKA,ICLM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS;AAAE,ADKxB,ECLwB,IAAI,EAAE,IDK9B,GCLsB;AAAiB,ADQrC,ECRqC,GAAG,EAAE,IDQ1C,IAAA,CAAoB,IAApB,EAAmC;ACRf,ADQA,CCRT,CAAb,ODQsB,IAAA,GAAA,IAAA;ACPtB,ADKE,ICLE,CAAC,GAAL,CAAS,ADKP,MAAA,GAAwC,EAAxC;ACLQ,ADO+B,ECP/B,IAAI,EAAE,MAAP;AAAe,EAAA,GAAG,EAAE;AAApB,ADSP,CCTF,CDSE,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,QAAJ,EAAoB;ACPtB,ADQI,OCRG,CAAC,GAAR,ADQW,CCRC,IAAI,ADQA,CCRC,GAAL,ADQD,CCRU,ADQA,KCRT,CAAZ,EDQW,CAAP;AACD,GAFD;;AAIA,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,MAAJ,EAAqB;AACnB,IAAA,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,MAAzB;AACD,GAFD;;AAIA,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;AACtC,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACD,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACvB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;AACA,QAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;AACtC;AACD;;AAED,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAC,QAAD,EAAS;AACxB,MAAA,QAAQ;AACT,KAFD;AAGD,GATD;;AAUF,SAAA,IAAA;AA7BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\r\n  name?: string;\r\n  age?: number;\r\n}\r\n\r\ntype Callback = () => void;\r\n\r\nexport class User {\r\n  events: { [key: string]: Callback[] } = {};\r\n\r\n  constructor(private data: UserProps) {}\r\n\r\n  get(propName: string): string | number {\r\n    return this.data[propName];\r\n  }\r\n\r\n  set(update: UserProps): void {\r\n    Object.assign(this.data, update);\r\n  }\r\n\r\n  on(eventName: string, callback: Callback): void {\r\n    const handlers = this.events[eventName] || [];\r\n    handlers.push(callback);\r\n    this.events[eventName] = handlers;\r\n  }\r\n\r\n  trigger(eventName: string): void {\r\n    const handlers = this.events[eventName];\r\n    if (!handlers || handlers.length === 0) {\r\n      return;\r\n    }\r\n\r\n    handlers.forEach((callback) => {\r\n      callback();\r\n    });\r\n  }\r\n}\r\n","import { User } from \"./models/User\";\r\n\r\nconst user = new User({ name: \"Tosin\", age: 23 });\r\nuser.set({name: \"Tade\", age: 20})\r\n\r\nconsole.log(user.get('age'));\r\n"]}